{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","ui-component/extended/AnimateButton.js","utils/password-strength.js","components/theme/AlertDialog.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["AuthWrapper1","styled","backgroundColor","minHeight","AuthCardWrapper","children","other","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","p","sm","xl","AnimateButton","forwardRef","ref","offset1","offset2","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","motion","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","AlertDialog","setOpenModal","setCloseModal","React","open","setOpen","handleClose","useEffect","Dialog","fullWidth","onClose","DialogTitle","id","DialogContent","List","width","bgcolor","ListItem","Typography","DialogActions","Button","variant","onClick","validar","yup","shape","rut","required","max","trim","strict","value","checkRut","a","llamadaApi","post","validarSiExisteRut","getRutUsu","data","email","validarSiExisteCorreo","getCorreoUsu","password","nombre","apellidop","apellidom","escuela","isChecked","oneOf","FirebaseRegister","others","useState","mensaje","estado","hiddenTime","snackMensaje","setSnackMensaje","userDataMail","setuserDataMail","setsetOpenModal","theme","useTheme","matchDownSM","useMediaQuery","breakpoints","down","showPassword","setShowPassword","strength","setStrength","level","setLevel","changePassword","count","temp","label","color","errorMain","warningDark","orangeMain","successMain","successDark","navigate","useNavigate","mutate","useMutation","registrarusuario","onSuccess","res","setTimeout","config","basename","enviarCorreoUsuario","formik","useFormik","initialValues","onSubmit","values","user","prettifyRut","md5","fecRegistro","moment","Date","format","validationSchema","handleSubmit","Grid","container","spacing","item","TextField","name","onChange","handleChange","error","touched","Boolean","errors","helperText","onBlur","e","target","setFieldValue","handleBlur","mt","mb","FormControl","autoComplete","typography","customInput","InputLabel","OutlinedInput","inputProps","form","autocomplete","endAdornment","InputAdornment","position","IconButton","onMouseDown","event","preventDefault","edge","size","FormHelperText","Box","alignItems","style","height","borderRadius","fontSize","justifyContent","FormControlLabel","control","Checkbox","checked","component","Link","to","submit","disableElevation","disabled","isSubmitting","SnackComponent","Register","m","Logo","Stack","palette","secondary","main","gutterBottom","textAlign","AuthRegister","Divider","textDecoration"],"mappings":"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","file":"static/js/5.d9ddd4a2.chunk.js","sourcesContent":["import { styled } from '@mui/material/styles';\r\n\r\n// ==============================|| AUTHENTICATION 1 WRAPPER ||============================== //\r\n\r\nconst AuthWrapper1 = styled('div')(() => ({\r\n    backgroundColor: 'black',\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// ==============================|| AUTHENTICATION CARD WRAPPER ||============================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => (\r\n    <MainCard\r\n        sx={{\r\n            maxWidth: { xs: 400, lg: 475 },\r\n            margin: { xs: 2.5, md: 3 },\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            }\r\n        }}\r\n        content={false}\r\n        {...other}\r\n    >\r\n        <Box sx={{ p: { xs: 2, sm: 3, xl: 5 } }}>{children}</Box>\r\n    </MainCard>\r\n);\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\n// ==============================|| ANIMATION BUTTON ||============================== //\r\n\r\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n            return (\r\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.propTypes = {\r\n    children: PropTypes.node,\r\n    offset: PropTypes.number,\r\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\r\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\r\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\r\n};\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n","/**\r\n * Password validator for login pages\r\n */\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Muy débil', color: value.errorMain };\r\n    if (count < 3) return { label: 'Débil', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Buena', color: value.successMain };\r\n    if (count < 6) return { label: 'Fuerte', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useEffect } from 'react';\r\nimport { List, ListItem, Typography } from '@mui/material';\r\n\r\nexport default function AlertDialog({ setOpenModal = false, setCloseModal }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setCloseModal(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (setOpenModal === true) {\r\n            handleClickOpen();\r\n        }\r\n    }, [setOpenModal]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Términos y condiciones de uso de nuestro sistema</DialogTitle>\r\n                <DialogContent>\r\n\r\n                        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                            <ListItem>\r\n                                <Typography>\r\n                                -El incumplimiento de cualquiera de las condiciones establecidas a continuación puede provocar la eliminación de la cuenta del usuario junto con la información de su escuela, alumnos y campeonatos.\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                            <Typography>\r\n                                -El mal uso del sistema como el ingreso de información falsa, insultante o que pueda afectar y/o molestar a otros usuarios será tomado como un incumplimiento.\r\n                                </Typography>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                            <Typography>\r\n                                -El sistema es para uso ESTRICTO de los instructores de las escuelas, NO deben registrarse en este formulario los alumnos o apoderados, ingresar a los alumnos al sistema es tarea del/la instructor/a responsable, el/ella los podrá registrar luego de que se haya registrado e ingresado al sistema con sus credenciales.\r\n                                </Typography>\r\n                            </ListItem>\r\n                        </List>\r\n                  \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant='contained' onClick={handleClose}>Entendido</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { llamadaApi } from 'api/reqApi';\r\nimport config from 'config';\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\nimport { checkRut, prettifyRut } from 'react-rut-formatter';\r\nimport md5 from 'md5';\r\n\r\n// third party\r\nimport * as yup from 'yup';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { useFormik } from 'formik';\r\nimport moment from 'moment';\r\nimport { useMutation } from 'react-query';\r\nimport { enviarCorreoUsuario, registrarusuario } from 'helpers/login';\r\nimport { SnackComponent } from 'components/theme/SnackComponent';\r\nimport AlertDialog from 'components/theme/AlertDialog';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst validar = yup.object().shape({\r\n    rut: yup\r\n        .string()\r\n        .required('Campo requerido')\r\n        .max(12, 'Máximo de 12 caracteres')\r\n        .trim('No debe dejar campos en blanco')\r\n        .strict(true)\r\n        .test('test-name', 'Rut inválido', (value) => checkRut(value))\r\n        .test('validarSiExisteRut', 'Este rut ya fue registrado', async (value) => {\r\n            // el false activa el error\r\n            const getRutUsu = await llamadaApi.post('/controller/loginController', { validarSiExisteRut: value });\r\n            return !getRutUsu.data;\r\n        }),\r\n    email: yup\r\n        .string()\r\n        .email('Debe ser un correo valido')\r\n        .max(255)\r\n        .required('Correo requerido')\r\n        .test('validarSiExisteMail', 'Este correo ya está en uso', async (value) => {\r\n            // el false activa el error\r\n            const getCorreoUsu = await llamadaApi.post('/controller/loginController', { validarSiExisteCorreo: value });\r\n            return !getCorreoUsu.data;\r\n        }),\r\n    password: yup.string().trim('No debe dejar campos en blanco').max(255).required('Contraseña requerida'),\r\n    nombre: yup.string().trim('No debe dejar campos en blanco').max(50).required('Nombre requerido'),\r\n    apellidop: yup.string().trim('No debe dejar campos en blanco').max(50).required('Apellido paterno requerido'),\r\n    apellidom: yup.string().trim('No debe dejar campos en blanco').max(50).required('Apellido materno requerido'),\r\n    escuela: yup.string().trim('No debe dejar campos en blanco').max(50).required('Escuela requerida'),\r\n    isChecked: yup.bool().oneOf([true], 'Debe aceptar los términos y condiciones de usu para continuar')\r\n});\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const [snackMensaje, setSnackMensaje] = useState({\r\n        open: false,\r\n        mensaje: '',\r\n        estado: 'success',\r\n        hiddenTime: 5000\r\n    });\r\n\r\n    const [userDataMail, setuserDataMail] = useState([]);\r\n    const [setOpenModal, setsetOpenModal] = useState(false);\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const { mutate } = useMutation(registrarusuario, {\r\n        onSuccess: (res) => {\r\n            if (res.data === true) {\r\n                setSnackMensaje({\r\n                    ...snackMensaje,\r\n                    open: true,\r\n                    mensaje: 'Usuario registrado correctamente, redirigiendo al login...',\r\n                    estado: 'success',\r\n                    hiddenTime: 4000\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    navigate(`${config.basename}/`);\r\n                }, 3900);\r\n\r\n                 enviarCorreoUsuario(userDataMail);\r\n               \r\n            } else {\r\n                setSnackMensaje({\r\n                    ...snackMensaje,\r\n                    open: true,\r\n                    mensaje: 'Ups.. algo salió mal al registrar, intentelo más tarde',\r\n                    estado: 'error',\r\n                    hiddenTime: 4500\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            rut: '',\r\n            nombre: '',\r\n            apellidop: '',\r\n            apellidom: '',\r\n            email: '',\r\n            password: '',\r\n            escuela:'',\r\n            isChecked: false\r\n        },\r\n        onSubmit: (values) => {\r\n            const user = {\r\n                ...values,\r\n                rut: prettifyRut(values.rut),\r\n                password: md5(values.password),\r\n                fecRegistro: moment(new Date()).format('YYYY-MM-DD HH:mm:ss')\r\n            };\r\n            setuserDataMail(user);\r\n            mutate(user);\r\n        },\r\n        validationSchema: validar\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={formik.handleSubmit} {...others}>\r\n                <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Rut\"\r\n                            margin=\"normal\"\r\n                            name=\"rut\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.rut}\r\n                            error={formik.touched.rut && Boolean(formik.errors.rut)}\r\n                            helperText={formik.touched.rut && formik.errors.rut}\r\n                            onBlur={(e) =>\r\n                                checkRut(e.target.value) ? formik.setFieldValue('rut', prettifyRut(e.target.value)) : formik.handleBlur(e)\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Primer nombre\"\r\n                            margin=\"normal\"\r\n                            name=\"nombre\"\r\n                            onBlur={formik.handleBlur}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.nombre && Boolean(formik.errors.nombre)}\r\n                            helperText={formik.touched.nombre && formik.errors.nombre}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Apellido paterno\"\r\n                            margin=\"normal\"\r\n                            name=\"apellidop\"\r\n                            onBlur={formik.handleBlur}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.apellidop && Boolean(formik.errors.apellidop)}\r\n                            helperText={formik.touched.apellidop && formik.errors.apellidop}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Apellido materno\"\r\n                            margin=\"normal\"\r\n                            name=\"apellidom\"\r\n                            onBlur={formik.handleBlur}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.apellidom && Boolean(formik.errors.apellidom)}\r\n                            helperText={formik.touched.apellidom && formik.errors.apellidom}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={matchDownSM ? 0 : 2} mt={1}>\r\n                    <Grid item xs={12} sm={12} mb={2}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label=\"Nombre de su escuela\"\r\n                                autoComplete=\"off\"\r\n                                type=\"text\"\r\n                                value={formik.values.escuela}\r\n                                name=\"escuela\"\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.escuela && Boolean(formik.errors.escuela)}\r\n                                helperText={formik.touched.escuela && formik.errors.escuela}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <FormControl fullWidth>\r\n                            <TextField\r\n                                label=\"Correo\"\r\n                                autoComplete=\"off\"\r\n                                type=\"email\"\r\n                                value={formik.values.email}\r\n                                name=\"email\"\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                helperText={formik.touched.email && formik.errors.email}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(formik.touched.password && formik.errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel>Contraseña</InputLabel>\r\n                            <OutlinedInput\r\n                                autoComplete=\"off\"\r\n                                inputProps={{\r\n                                    form: {\r\n                                        autocomplete: 'off'\r\n                                    }\r\n                                }}\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={formik.values.password}\r\n                                name=\"password\"\r\n                                label=\"Contraseña\"\r\n                                onBlur={formik.handleBlur}\r\n                                onChange={(e) => {\r\n                                    formik.setFieldValue('password', e.target.value);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                            />\r\n                            {formik.touched.password && formik.errors.password && (\r\n                                <FormHelperText error>{formik.errors.password}</FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                style={{ backgroundColor: level?.color }}\r\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level?.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={formik.values.isChecked}\r\n                                    onChange={formik.handleChange}\r\n                                    name=\"isChecked\"\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label={\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Acepto los &nbsp;\r\n                                    <Button onClick={() => setsetOpenModal(true)}>\r\n                                        <Typography variant=\"subtitle1\" component={Link} to=\"\">\r\n                                            Términos y condiciones de uso\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </Typography>\r\n                            }\r\n                        />\r\n                        {formik.touched.isChecked && formik.errors.isChecked && (\r\n                            <FormHelperText error>{formik.errors.isChecked}</FormHelperText>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n                {formik.errors.submit && (\r\n                    <Box sx={{ mt: 3 }}>\r\n                        <FormHelperText error>{formik.errors.submit}</FormHelperText>\r\n                    </Box>\r\n                )}\r\n\r\n                <Box sx={{ mt: 2 }}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            disabled={formik.isSubmitting}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                        >\r\n                            Registrar\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Box>\r\n                <SnackComponent snackMensaje={snackMensaje} setSnackMensaje={setSnackMensaje} />\r\n                <AlertDialog setOpenModal={setOpenModal} setCloseModal={setsetOpenModal} />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Registro de usuario\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Ingresa tus datos para continuar\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/jeonsa/sistemaJeonsa\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                ¿Ya tienes una cuenta?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}